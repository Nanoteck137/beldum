// DO NOT EDIT THIS: This file was generated by the Pyrin Typescript Generator
import { z } from "zod";

export const CreateProject = z.object({
  id: z.string(),
});
export type CreateProject = z.infer<typeof CreateProject>;

export const CreateProjectBody = z.object({
  name: z.string(),
});
export type CreateProjectBody = z.infer<typeof CreateProjectBody>;

export const Project = z.object({
  id: z.string(),
  name: z.string(),
});
export type Project = z.infer<typeof Project>;

export const GetProjects = z.object({
  projects: z.array(Project),
});
export type GetProjects = z.infer<typeof GetProjects>;

export const GetProjectById = Project;
export type GetProjectById = z.infer<typeof GetProjectById>;

export const CreateBoard = z.object({
  id: z.string(),
});
export type CreateBoard = z.infer<typeof CreateBoard>;

export const CreateBoardBody = z.object({
  name: z.string(),
  hidden: z.boolean(),
});
export type CreateBoardBody = z.infer<typeof CreateBoardBody>;

export const Task = z.object({
  id: z.string(),
  name: z.string(),
  boardId: z.string(),
  boardName: z.string(),
  tags: z.array(z.string()),
  created: z.number(),
  updated: z.number(),
});
export type Task = z.infer<typeof Task>;

export const Board = z.object({
  id: z.string(),
  name: z.string(),
  items: z.array(Task),
});
export type Board = z.infer<typeof Board>;

export const GetProjectBoards = z.object({
  boards: z.array(Board),
});
export type GetProjectBoards = z.infer<typeof GetProjectBoards>;

export const GetProjectTasks = z.object({
  tasks: z.array(Task),
});
export type GetProjectTasks = z.infer<typeof GetProjectTasks>;

export const CreateTask = z.object({
  id: z.string(),
});
export type CreateTask = z.infer<typeof CreateTask>;

export const CreateTaskBody = z.object({
  title: z.string(),
  tags: z.array(z.string()),
});
export type CreateTaskBody = z.infer<typeof CreateTaskBody>;

export const Signup = z.object({
  id: z.string(),
  username: z.string(),
});
export type Signup = z.infer<typeof Signup>;

export const SignupBody = z.object({
  username: z.string(),
  password: z.string(),
  passwordConfirm: z.string(),
});
export type SignupBody = z.infer<typeof SignupBody>;

export const Signin = z.object({
  token: z.string(),
});
export type Signin = z.infer<typeof Signin>;

export const SigninBody = z.object({
  username: z.string(),
  password: z.string(),
});
export type SigninBody = z.infer<typeof SigninBody>;

export const ChangePasswordBody = z.object({
  currentPassword: z.string(),
  newPassword: z.string(),
  newPasswordConfirm: z.string(),
});
export type ChangePasswordBody = z.infer<typeof ChangePasswordBody>;

export const GetMe = z.object({
  id: z.string(),
  username: z.string(),
  role: z.string(),
  displayName: z.string(),
});
export type GetMe = z.infer<typeof GetMe>;

export const GetSystemInfo = z.object({
  version: z.string(),
});
export type GetSystemInfo = z.infer<typeof GetSystemInfo>;

export const UpdateUserSettingsBody = z.object({
  displayName: z.string().nullable().optional(),
  quickPlaylist: z.string().nullable().optional(),
});
export type UpdateUserSettingsBody = z.infer<typeof UpdateUserSettingsBody>;

export const CreateApiToken = z.object({
  token: z.string(),
});
export type CreateApiToken = z.infer<typeof CreateApiToken>;

export const CreateApiTokenBody = z.object({
  name: z.string(),
});
export type CreateApiTokenBody = z.infer<typeof CreateApiTokenBody>;

export const ApiToken = z.object({
  id: z.string(),
  name: z.string(),
});
export type ApiToken = z.infer<typeof ApiToken>;

export const GetAllApiTokens = z.object({
  tokens: z.array(ApiToken),
});
export type GetAllApiTokens = z.infer<typeof GetAllApiTokens>;

